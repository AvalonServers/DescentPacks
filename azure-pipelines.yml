# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
#- task: Gradle@2
#  displayName: Test pack build
#  inputs: 
#    gradleWrapperFile: 'gradlew'
#    gradleOptions: '-Xmx3072m'
#    javaHomeOption: 'JDKVersion'
#    jdkVersionOption: '1.8'
#    jdkArchitectureOption: 'x64'
#    publishJUnitResults: false
#    testResultsFiles: '**/TEST-*.xml'
#    tasks: 'descentFrozenHell_build'
#- task: Bash@3
#  displayName: Git hard reset to HEAD
#  inputs:
#    targetType: 'inline'
#    script: 'git reset --hard HEAD'
#    workingDirectory: '$(Build.SourcesDirectory)'
- task: Gradle@2
  displayName: Pack all artifacts
  inputs: 
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'descentFrozenHell_packAll'
    
- task: CopyFiles@2
  displayName: Copy server artifacts to staging directory
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/build/_upload/server/descentfrozenhell'
    Contents: '**/*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/server'
- task: CopyFiles@2
  displayName: Copy client artifacts to staging directory
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/build/_upload/voodoo'
    Contents: '**/*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/client'
- task: CopyFiles@2
  displayName: Copy launcher artifacts to staging directory
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/build/_upload/multimc-voodoo'
    Contents: 'descentfrozenhell.zip'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/launcher'

- task: PublishBuildArtifacts@1
  displayName: Publish server artifacts
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/server'
    ArtifactName: 'server'
    publishLocation: 'Container'
- task: PublishBuildArtifacts@1
  displayName: Publish client artifacts
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/client'
    ArtifactName: 'client'
    publishLocation: 'Container'
- task: PublishBuildArtifacts@1
  displayName: Publish launcher artifacts
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/launcher'
    ArtifactName: 'launcher'
    publishLocation: 'Container'
